version: '3'
services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: apimanager
    ports:
      - 27017:27017
    command: mongod --auth
    networks:
      - app-network
  zookeeper:
     container_name: zookeeper
     networks:
       - app-network
     image: confluentinc/cp-zookeeper:latest
     environment:
       ZOOKEEPER_CLIENT_PORT: 2181
       ZOOKEEPER_TICK_TIME: 2000
     ports:
       - "2181:2181"
  kafka:
     container_name: kafka
    #hostname: localhost
     networks:
       - app-network
     image: confluentinc/cp-kafka:latest
     depends_on:
       - zookeeper
     environment:
       KAFKA_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://kafka:29092
       KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:29092
       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
     ports:
       - "9092:9092"
       - "29092:29092"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - app-network
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.6.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - app-network
  logstash:
    image: logstash:7.6.0
    container_name: logstash
    ports:
      - "9600:9600"
    depends_on:
      - elasticsearch
      - mongodb
    volumes:
      - ./logstash/pipeline/:/usr/share/logstash/pipeline/
    networks:
      - app-network
  mysql:
     image: mysql:5.7
     container_name: mysql
     ports: 
       - "3306:3306"    
     environment:
       MYSQL_ROOT_PASSWORD: sgeifsp
       MYSQL_DATABASE: db_example
       MYSQL_USER: spring
       MYSQL_PASSWORD: spring
volumes:
  elasticsearch-data:
    driver: local
networks: 
    app-network:
        driver: bridge
